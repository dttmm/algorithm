#include <iostream>

using namespace std;

#define MAX_N 1000
#define MOD 1000000007

int N;
long long d[MAX_N + 1];

// dp
void solve() {
	d[0] = 1;
	d[1] = 2;
	d[2] = 7;

	// 'ㅣ' 모양은 바로 이전 사각형 뒤에 추가할 수 있고
	// 'ㅡ' 모양은 두번째 전 사각형 뒤에 추가할 수 있음
	// 사각형의 길이가 3이상 될 경우 'ㅡ' 모양과 'ㅁ' 모양을 이용하여 새로운 블럭 2개를 만들 수 있고
	// 해당 블럭은 세전째 전 사각형 뒤에 추가한다면 중복된 모양을 피할 수 있음
	// 결국 i>3이상인 경우 i-3, i-4, ... 1 번째 사각형 뒤에 새로운 모양을 2개씩 붙일 수 있으므로
	// 해당 번째 사각형 * 2해준 것 만큼 개수를 더해줌
	for (int i = 3; i <= N; i++) {
		// 기존 i-1 번째 사각형 뒤에도 2개씩 붙일 수 있었고
		// i-2번째 사각형 뒤에는 3갰기 붙일 수 있었으므로
		// i-1 ~ 1번째 사각형까지 모두 2개씩 붙여주고
		for (int j = 1; j <= i; j++) {
			d[i] = (d[i] + 2 * d[i - j]) % MOD;
		}
		// 마지막에 i-2번째 사각형에 한번 더 붙여줌
		d[i] = (d[i] + d[i - 2]) % MOD;
	}
}

int main() {

	// 입력
	cin >> N;

	solve();

	cout << d[N];
}